import static java.lang.System.getenv

buildscript {
    ext {
        kotlinVersion = '1.3.21'
        releaseVersion = '2.8.0'
        klintVersion = '7.1.0'
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion",
                "org.jlleitschuh.gradle:ktlint-gradle:$klintVersion",
                "net.researchgate:gradle-release:$releaseVersion"
    }
}

ext {
    fabricVersion = '1.4.0'
    protobufVersion = '3.7.0'
    jacksonVersion = '2.9.8'
    guavaVersion = '27.0.1-jre'
    grpcNettyVersion = '1.18.0'
    nettyVersion = '4.1.32.Final'
    annotationApiVersion = '1.3.2'
    slf4jVersion = '1.7.26'
    kloggingVersion = '1.6.25'
    logbackVersion = '1.2.3'
    junitVersion = '5.4.0'
    assertJVersion = '3.12.0'
    mockkVersion = '1.9'
}

def props = new Properties()
file("chaincode/version.properties").withInputStream {
    props.load(it)
}

allprojects {
    group 'com.contoso.healthcare'
    version props['version']
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url getenv("CONTOSO_ARTIFACTS_URL") ?: contosoArtifactsUrl
            credentials {
                username getenv("CONTOSO_ARTIFACTS_USERNAME") ?: contosoArtifactsUsername
                // FIXME Rename env variable to CONTOSO_ARTIFACTS_ACCESS_TOKEN when is ready in Docker image
                password getenv("CONTOSO_ARTIFACTS_ACCESS_TOKEN") ?: contosoArtifactsAccessToken
            }
        }
    }
    tasks.withType(JavaCompile) {
        options.fork = true
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'net.researchgate.release'
    apply plugin: 'org.jlleitschuh.gradle.ktlint'

    configurations.all {
        resolutionStrategy {
            preferProjectModules()
            cacheChangingModulesFor 0, 'seconds'
        }
    }

    test {
        useJUnitPlatform()
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        archiveClassifier.set('sources')
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
                artifact sourceJar
            }
        }
        repositories {
            maven {
                url getenv("CONTOSO_ARTIFACTS_URL") ?: contosoArtifactsUrl
                credentials {
                    username getenv("CONTOSO_ARTIFACTS_USERNAME") ?: contosoArtifactsUsername
                    // FIXME Rename env variable to CONTOSO_ARTIFACTS_ACCESS_TOKEN when is ready in Docker image
                    password getenv("CONTOSO_ARTIFACTS_ACCESS_TOKEN") ?: contosoArtifactsAccessToken
                }
            }
        }
    }

    dependencies {
        implementation 'org.jetbrains.kotlin:kotlin-stdlib',
                "io.github.microutils:kotlin-logging:$kloggingVersion",
                "org.slf4j:log4j-over-slf4j:$slf4jVersion",
                "org.slf4j:jul-to-slf4j:$slf4jVersion"

        runtimeOnly "ch.qos.logback:logback-classic:$logbackVersion"

        testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion",
                "org.junit.jupiter:junit-jupiter-params:$junitVersion",
                "org.assertj:assertj-core:$assertJVersion"

        testImplementation("io.mockk:mockk:$mockkVersion") {
            exclude group: 'org.jetbrains.kotlin'
        }

        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

        if (JavaVersion.current().isJava9Compatible()) {
            // Workaround for @javax.annotation.Generated
            // see: https://github.com/grpc/grpc-java/issues/3633
            implementation "javax.annotation:javax.annotation-api:$annotationApiVersion"
        }
    }

    sourceCompatibility = JavaVersion.VERSION_11

    compileKotlin {
        kotlinOptions.jvmTarget = '1.8'
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = '1.8'
    }
}