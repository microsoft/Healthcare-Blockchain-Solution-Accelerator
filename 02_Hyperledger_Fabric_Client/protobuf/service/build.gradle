plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    id 'org.unbroken-dome.test-sets' version '2.1.1'
    id 'org.jlleitschuh.gradle.ktlint' version '7.1.0'
}

ext {
    grpcNettyVersion = '1.18.0'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobufVersion"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpcNettyVersion"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {
                    outputSubDir = 'java'
                }
            }
        }
    }
}

testSets {
    integrationTest {
        dirName = 'integration-test'
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
    reports.html.enabled = false
    reports.junitXml.enabled = false
}

application {
    mainClassName = "com.contoso.healthcare.service.HealthcareServiceImpl"
}

ext {
    fabricVersion = '1.4.0'
    kloggingVersion = '1.6.25'
    slf4jVersion = '1.7.26'
    logbackVersion = '1.2.3'
    junitVersion = '5.4.0'
    assertJVersion = '3.12.0'
}

dependencies {
    api rootProject.findProject(':contoso-healthcare-profile-protos'),
            "com.contoso.healthcare:contoso-healthcare-common:$version"

    implementation "io.github.microutils:kotlin-logging:$kloggingVersion",
            'org.jetbrains.kotlin:kotlin-stdlib',
            'org.jetbrains.kotlin:kotlin-reflect',
            "io.grpc:grpc-netty:$grpcVersion",
            "io.grpc:grpc-protobuf:$grpcVersion",
            "io.grpc:grpc-stub:$grpcVersion",
            "org.slf4j:log4j-over-slf4j:$slf4jVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion"

    runtimeOnly "ch.qos.logback:logback-classic:$logbackVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.junit.jupiter:junit-jupiter-params:$junitVersion",
            "org.assertj:assertj-core:$assertJVersion"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

docker {
    javaApplication {
        maintainer = 'Contoso'
        baseImage = 'openjdk:11-jdk'
        tag = 'grpc-service:1.0.0'
        ports = [9090]
    }
}

dockerBuildImage.group = 'docker'
dockerPushImage.group = 'docker'

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}