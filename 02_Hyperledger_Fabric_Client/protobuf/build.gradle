import static java.lang.System.getenv

buildscript {
    ext {
        protobufPluginVersion = '0.8.8'
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:$protobufPluginVersion",
                'javax.activation:activation:1.1',
                'com.bmuschko:gradle-docker-plugin:4.6.0'
    }
}

def props = new Properties()
file("../kotlin/chaincode/version.properties").withInputStream {
    props.load(it)
}

allprojects {
    apply plugin: 'maven-publish'
    group 'com.contoso.healthcare'
    version props['version']
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url getenv("CONTOSO_ARTIFACTS_URL") ?: contosoArtifactsUrl
            credentials {
                username getenv("CONTOSO_ARTIFACTS_USERNAME") ?: contosoArtifactsUsername
                // FIXME Rename env variable to CONTOSO_ARTIFACTS_ACCESS_TOKEN when is ready in Docker image
                password getenv("CONTOSO_ARTIFACTS_ACCESS_TOKEN") ?: contosoArtifactsAccessToken
            }
        }
    }
}

ext {
    cryptletVersion = '1.3.2-SNAPSHOT'
    protobufVersion = '3.7.0'
    grpcVersion = '1.19.0'
    fabricVersion = '1.4.0'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'eclipse'
    apply plugin: 'com.google.protobuf'
    apply plugin: 'com.bmuschko.docker-java-application'


    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:$protobufVersion"
        }
        generateProtoTasks {
            ofSourceSet('main').each { task ->
                task.builtins {
                    csharp {
                        outputSubDir = '../../03_Application_Deployment/src/Healthcare.BC.Chain/Proto/Healthcare.BC.Chain.Messages'
                    }
                }
            }
        }
    }

    dependencies {
        implementation "com.google.protobuf:protobuf-java:$protobufVersion",
                "com.google.protobuf:protobuf-java-util:$protobufVersion"

        if (JavaVersion.current().isJava9Compatible()) {
            // Workaround for @javax.annotation.Generated
            // see: https://github.com/grpc/grpc-java/issues/3633
            compile 'javax.annotation:javax.annotation-api:1.3.2'
        }
    }

    tasks.withType(JavaCompile) {
        options.fork = true
    }
    
    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        archiveClassifier.set('sources')
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
                artifact sourceJar
            }
        }
        repositories {
            maven {
                url getenv("CONTOSO_ARTIFACTS_URL") ?: contosoArtifactsUrl
                credentials {
                    username getenv("CONTOSO_ARTIFACTS_USERNAME") ?: contosoArtifactsUsername
                    // FIXME Rename env variable to CONTOSO_ARTIFACTS_ACCESS_TOKEN when is ready in Docker image
                    password getenv("azureArtifactsGradleAccessToken") ?: contosoArtifactsAccessToken
                }
            }
        }
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
}

wrapper {
    gradleVersion = '5.2.1'
}